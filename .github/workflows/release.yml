name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-release:
    runs-on: windows-latest

    env:
      PROJECT_NAME: AeroHear
      RUNTIME_ID: win-x64
      FRAMEWORK: net8.0-windows
      CONFIGURATION: Release

    steps:
    - name: üì• Cloner le d√©p√¥t
      uses: actions/checkout@v4

    - name: üß∞ Installer .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: üõ†Ô∏è Restaurer les d√©pendances
      run: dotnet restore

    - name: üß± Build self-contained .exe
      run: >
        dotnet publish -c ${{ env.CONFIGURATION }}
        -r ${{ env.RUNTIME_ID }}
        --self-contained true
        /p:PublishSingleFile=true
        /p:IncludeAllContentForSelfExtract=true
        /p:PublishTrimmed=false

    - name: üì¶ Cr√©er archive ZIP
      run: |
        cd bin\${{ env.CONFIGURATION }}\${{ env.FRAMEWORK }}\${{ env.RUNTIME_ID }}\publish
        Compress-Archive -Path * -DestinationPath ../../../${{ env.PROJECT_NAME }}.zip

    - name: üóëÔ∏è Supprimer les anciennes releases
      shell: pwsh
      run: |
        # Obtenir toutes les releases existantes
        $releases = gh release list --limit 100 --json tagName,id
        $releasesData = $releases | ConvertFrom-Json
        
        # Si il y a des releases, les supprimer
        if ($releasesData.Count -gt 0) {
          Write-Host "Suppression de $($releasesData.Count) ancienne(s) release(s)..."
          foreach ($release in $releasesData) {
            Write-Host "Suppression de la release: $($release.tagName)"
            gh release delete $release.tagName --yes --cleanup-tag
          }
        } else {
          Write-Host "Aucune ancienne release √† supprimer."
        }
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: üöÄ Cr√©er une release GitHub avec l'archive
      uses: softprops/action-gh-release@v2
      with:
        files: ./bin/${{ env.CONFIGURATION }}/${{ env.PROJECT_NAME }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
